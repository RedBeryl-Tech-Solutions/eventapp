package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmailConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailConfigAllPropertiesEquals(EmailConfig expected, EmailConfig actual) {
        assertEmailConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertEmailConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailConfigAllUpdatablePropertiesEquals(EmailConfig expected, EmailConfig actual) {
        assertEmailConfigUpdatableFieldsEquals(expected, actual);
        assertEmailConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailConfigAutoGeneratedPropertiesEquals(EmailConfig expected, EmailConfig actual) {
        assertThat(expected)
            .as("Verify EmailConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailConfigUpdatableFieldsEquals(EmailConfig expected, EmailConfig actual) {
        assertThat(expected)
            .as("Verify EmailConfig relevant properties")
            .satisfies(e -> assertThat(e.getEmailId()).as("check emailId").isEqualTo(actual.getEmailId()))
            .satisfies(e -> assertThat(e.getTokenString()).as("check tokenString").isEqualTo(actual.getTokenString()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmailConfigUpdatableRelationshipsEquals(EmailConfig expected, EmailConfig actual) {}
}
